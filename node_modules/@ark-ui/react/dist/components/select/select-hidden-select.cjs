'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const factory = require('../factory.cjs');
const useSelectContext = require('./use-select-context.cjs');

const SelectHiddenSelect = react.forwardRef(
  (props, ref) => {
    const select = useSelectContext.useSelectContext();
    const mergedProps = react$1.mergeProps(select.getHiddenSelectProps(), props);
    const isValueEmpty = select.value.length === 0;
    return /* @__PURE__ */ jsxRuntime.jsxs(factory.ark.select, { ...mergedProps, ref, children: [
      isValueEmpty && /* @__PURE__ */ jsxRuntime.jsx("option", { value: "" }),
      select.collection.toArray().map((option) => /* @__PURE__ */ jsxRuntime.jsx("option", { value: option.value, children: option.label }, option.value))
    ] });
  }
);
SelectHiddenSelect.displayName = "SelectHiddenSelect";

exports.SelectHiddenSelect = SelectHiddenSelect;
