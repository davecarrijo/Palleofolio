'use client';
import { jsx, Fragment } from 'react/jsx-runtime';
import { Children } from 'react';
import { createPortal } from 'react-dom';
import { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';
import { useIsServer } from '../../utils/use-is-server.js';

const Portal = (props) => {
  const { children, container, disabled } = props;
  const isServer = useIsServer();
  const { getRootNode } = useEnvironmentContext();
  if (isServer || disabled)
    return /* @__PURE__ */ jsx(Fragment, { children });
  const doc = getRootNode?.().ownerDocument ?? document;
  const mountNode = container?.current ?? doc.body;
  return /* @__PURE__ */ jsx(Fragment, { children: Children.map(children, (child) => createPortal(child, mountNode)) });
};

export { Portal };
