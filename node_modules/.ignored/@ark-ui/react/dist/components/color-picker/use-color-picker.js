'use client';
import * as colorPicker from '@zag-js/color-picker';
import { useMachine, normalizeProps } from '@zag-js/react';
import { useId } from 'react';
import { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';
import { useLocaleContext } from '../../providers/locale/use-locale-context.js';
import { useEvent } from '../../utils/use-event.js';

const useColorPicker = (props) => {
  const { getRootNode } = useEnvironmentContext();
  const { dir } = useLocaleContext();
  const initialContext = {
    id: useId(),
    dir,
    getRootNode,
    open: props.defaultOpen,
    "open.controlled": props.open !== void 0,
    ...props,
    value: props.value ? colorPicker.parse(props.value) : props.defaultValue ? colorPicker.parse(props.defaultValue) : void 0
  };
  const context = {
    ...initialContext,
    value: props.value ? colorPicker.parse(props.value) : void 0,
    onValueChange: useEvent(props.onValueChange, { sync: true }),
    onValueChangeEnd: useEvent(props.onValueChangeEnd)
  };
  const [state, send] = useMachine(colorPicker.machine(initialContext), { context });
  return colorPicker.connect(state, send, normalizeProps);
};

export { useColorPicker };
