'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react = require('react');
const reactDom = require('react-dom');
const useEnvironmentContext = require('../../providers/environment/use-environment-context.cjs');
const useIsServer = require('../../utils/use-is-server.cjs');

const Portal = (props) => {
  const { children, container, disabled } = props;
  const isServer = useIsServer.useIsServer();
  const { getRootNode } = useEnvironmentContext.useEnvironmentContext();
  if (isServer || disabled)
    return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, { children });
  const doc = getRootNode?.().ownerDocument ?? document;
  const mountNode = container?.current ?? doc.body;
  return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, { children: react.Children.map(children, (child) => reactDom.createPortal(child, mountNode)) });
};

exports.Portal = Portal;
